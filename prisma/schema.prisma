generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// =============================================
// ENUMS definitions
enum Role {
  ADMIN
  USER
  SUPER_ADMIN
}

enum UNITS {
  ml
  mg
  g
  l
  unit
}

enum SIZE {
  ml
  g
  l
  mg
  unit
}

// =============================================
// DATA TYPES
// type DrugName {
//   brand   String
//   generic String[]
// }

type Strength {
  amount String
  per    String
}

type ActiveIngredient {
  name     String
  strength Strength
}

type Quantity {
  batches Int?
  items   Int?
}

type Size {
  amount Int
  unit   SIZE
}

// type DrugImage {
//   cover String
//   inner String?
// }

type Price {
  item  Int
  batch Int
}

type Category {
  name        String
  description String
}

// =============================================
// MODELS
model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  firstName    String?
  lastName     String?
  username     String     @unique
  email        String?    @unique
  passwordHash String
  role         Role       @default(USER)
  drugItemIDs  String[]   @db.ObjectId
  drugItems    DrugItem[] @relation(fields: [drugItemIDs], references: [id])
  sessions     Session[]
}

model Session {
  // id        String   @id @default(auto()) @map("_id") @db.ObjectId
  id        String   @id @map("_id")
  userId    String   @db.ObjectId
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Drug {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  brandName         String
  description       String?
  indications       String[]     @unique
  contraIndications String[]
  drugItems         DrugItem[]
  manufacturerID    String       @db.ObjectId
  manufacturer      Manufacturer @relation(fields: [manufacturerID], references: [id])
  categories        String[]
  notes             String[]
}

model DrugItem {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  drug                 Drug                @relation(fields: [drugID], references: [id], onDelete: Cascade)
  drugID               String              @db.ObjectId
  activeIngredients    ActiveIngredient[]
  imageURL             String
  subImagesURL         String[]
  price                Price
  quantityInStock      Quantity?
  description          String?
  likesCount           Int                 @default(0)
  discount             Price?
  available            Boolean             @default(true)
  form                 String
  featured             Boolean             @default(false)
  dosageInstructions   DosageInstruction[] @relation(fields: [dosageInstructionIDs], references: [id])
  dosageInstructionIDs String[]            @db.ObjectId
  size                 Size
  itemsInBatch         Int?
  notes                String[]
  features             String[]
  User                 User[]              @relation(fields: [userIDs], references: [id])
  userIDs              String[]            @db.ObjectId
}

model Manufacturer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  country     String
  city        String
  drugs       Drug[]
  url         String?
  description String?
  featured    Boolean  @default(false)
}

model DosageInstruction {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  minAge          Int
  maxAge          Int
  frequencyPerDay Int
  amountPerDose   Int
  unit            UNITS
  DrugItem        DrugItem[] @relation(fields: [drugItemIDs], references: [id])
  drugItemIDs     String[]   @db.ObjectId
}

model Info {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  indications       String[]   @unique
  contraIndications String[]   @unique
  categories        Category[] @unique
  strengths         Strength[] @unique
  forms             String[]   @unique
}

model Record {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userID     String   @db.ObjectId
  drugItemID String   @db.ObjectId
  quantity   Quantity
}
